<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>reallyli - 那些道听途说</title>
    <link>https://reallyli.github.io/</link>
    <description>Recent content on reallyli - 那些道听途说</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 14 Dec 2018 00:19:14 +0800</lastBuildDate>
    
        <atom:link href="https://reallyli.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>沙漏</title>
      <link>https://reallyli.github.io/hourglass/</link>
      <pubDate>Fri, 14 Dec 2018 00:19:14 +0800</pubDate>
      
      <guid>https://reallyli.github.io/hourglass/</guid>
      
        <description>

&lt;h1 id=&#34;wade-and-james-final-battle&#34;&gt;Wade And James Final Battle&lt;/h1&gt;


&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//player.vimeo.com/video/306211495&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
 &lt;/div&gt;


&lt;h1 id=&#34;playoff-2017-of-cavs&#34;&gt;Playoff 2017 Of Cavs&lt;/h1&gt;


&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/CB4LVP7CfyU&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

</description>
      
    </item>
    
    <item>
      <title>关于</title>
      <link>https://reallyli.github.io/about/</link>
      <pubDate>Mon, 20 Aug 2018 21:38:52 +0800</pubDate>
      
      <guid>https://reallyli.github.io/about/</guid>
      
        <description>

&lt;iframe src=&#34;https://githubbadge.appspot.com/reallyli&#34; style=&#34;border: 0;height: 142px;width: 200px;overflow: hidden;&#34; frameBorder=&#34;0&#34;&gt;&lt;/iframe&gt;

&lt;h1 id=&#34;我的2018&#34;&gt;我的2018&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;关于下半年的小计划，付之于行动&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; 完成技术分享 &lt;a href=&#34;https://www.slideshare.net/ssuser05c065/sloid-share&#34;&gt;《浅谈软件设计原则之 SOLID》&lt;/a&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; 年前看两本书 《Vue.js 实战》，《PHP 7底层设计与源码实现》&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; 网站新域名上线，社区网站上线&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Vuejs 实战学习笔记1</title>
      <link>https://reallyli.github.io/post/vuejs-practical-book-note-1/</link>
      <pubDate>Sat, 15 Dec 2018 21:56:54 +0800</pubDate>
      
      <guid>https://reallyli.github.io/post/vuejs-practical-book-note-1/</guid>
      
        <description>

&lt;h1 id=&#34;关于-vue-js&#34;&gt;关于 Vue.js&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;简单小巧的核心（代码压缩后大小仅为 17KB），渐进式技术栈，足以应付任何规模的应用&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;书中简单的介绍现代 Web 开发中常见的高级功能，个人觉得不管是前端还是后端，技术不断更新和迭代的过程，都是包含了很多软件设计思想在里面，如何去解决高内聚，低耦合问题，如何在复杂的软件设计流程中，去写出易于维护的代码。还有一点比较重要的是，如何在快速迭代的软件开发周期内，去解放生产力。于是就会大量涌现很多优秀的开源框架和扩展库，去解决现实生活中的实际问题。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;解耦视图与数据&lt;/li&gt;
&lt;li&gt;可复用的组件&lt;/li&gt;
&lt;li&gt;前端路由&lt;/li&gt;
&lt;li&gt;状态管理&lt;/li&gt;
&lt;li&gt;虚拟 Dom&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;谈谈 Vue.js 在设计上使用 MVVM， 也就是 Model-View-ViewModel。作为在后端道路上工作几年的我来说，对于 MVC 可谓再熟悉不过了，对于 MVVM 作为 MVC 衍生出来的架构思想，独到之处便是 View 与 ViewModel 之间的数据双向绑定。这个时候我会想到在使用 PHP 框架构建 Web 项目的时候，控制器层从数据仓库中获取视图数据，并将数据绑定到指定模板上，通过 PHP 模板输出到浏览器中，往往我们在中间会加入一层 Presenter，类似 构建 Api 项目的 Transformer 层，当数据层发生更新时，对应的模板数据也会更新。&lt;/p&gt;

&lt;p&gt;对于传统的前端开发模式，Jqeury + SeaJS 等，想想那些前端框架还未百花齐放的时候，，追加 Dom 节点，修改子节点，拼接 Dom 节点，移除 Dom 节点等一大串逻辑复杂且臃肿肥大的代码，随着项目的不断迭代，技术人员的逐步更换，项目越来越变得难以维护，视图代码和业务逻辑紧耦合在一起。但是现在下新的概念越来越多，ES6，前端工程化，NodeJS，NPM 等，越来越能体现出技术的革新之迅速。而这一切都是在朝着提高开发效率，降低维护成本而前进。&lt;/p&gt;

&lt;p&gt;那么再回头看看 Vue.js，本身通过初次学习的时候，对于这种代码结构很熟悉，视图与数据的解耦恰恰能够让代码更加清晰，更加易于维护和扩展。&lt;/p&gt;

&lt;p&gt;初步了解构建一个 Vue 项目，就像搭建一个 Laravel Web 项目一样，一个基本的思路的 Maybe&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;结合实际需求，引入适合的第三方库&lt;/li&gt;
&lt;li&gt;配置文件构建&lt;/li&gt;
&lt;li&gt;项目路由命名&lt;/li&gt;
&lt;li&gt;项目部署和测试&lt;/li&gt;
&lt;li&gt;项目发布&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;那么发布一个 Vue 项目的基本思路也应该大致是&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Vue-cli 脚手架初始化项目&lt;/li&gt;
&lt;li&gt;引入合适的前端工具库&lt;/li&gt;
&lt;li&gt;配置文件构建&lt;/li&gt;
&lt;li&gt;打包文件配置&lt;/li&gt;
&lt;li&gt;Vuex 管理状态，vue-router 管理路由文件&lt;/li&gt;
&lt;li&gt;语法检查，项目部署和测试&lt;/li&gt;
&lt;li&gt;项目发布&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>收集短视频制作素材</title>
      <link>https://reallyli.github.io/post/material-providers/</link>
      <pubDate>Tue, 11 Dec 2018 23:48:49 +0800</pubDate>
      
      <guid>https://reallyli.github.io/post/material-providers/</guid>
      
        <description>

&lt;blockquote&gt;
&lt;p&gt;记录几个视频制作的素材和工具网站，以便于后续查阅和补充&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;无损音乐下载&#34;&gt;无损音乐下载&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.91flac.com&#34;&gt;https://www.91flac.com&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;音乐剪辑&#34;&gt;音乐剪辑&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://mp3cut.net/cn/beta&#34;&gt;https://mp3cut.net/cn/beta&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;youtube-视频下载&#34;&gt;Youtube 视频下载&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://y2mate.com&#34;&gt;https://y2mate.com&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;高质量图片素材&#34;&gt;高质量图片素材&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.pexels.com&#34;&gt;https://www.pexels.com&lt;/a&gt;&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Laravel 表单验证提示 The file failed to upload.</title>
      <link>https://reallyli.github.io/post/laravel-image-upload-failed/</link>
      <pubDate>Mon, 10 Dec 2018 22:21:24 +0800</pubDate>
      
      <guid>https://reallyli.github.io/post/laravel-image-upload-failed/</guid>
      
        <description>&lt;blockquote&gt;
&lt;p&gt;基于 Laravel 框架开发 图片上传 Api，FormRequest 中配置表单验证值为 &amp;ldquo;required|image&amp;rdquo;，前端多次上传有成功也有失败的情况&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;在实际项目开发中，常常会遇到很多疑惑的问题，本次对于 图片上传接口的问题定位，经过多次排查，基本上锁定在图片大小上，通过系统功能表单验证类抛出的422异常：&lt;code&gt;The file failed to upload.&lt;/code&gt;，通过查看 &lt;code&gt;resources/lang/en/validation&lt;/code&gt; 文件可以看到，实际框架层调用的是 &lt;code&gt;uploaded&lt;/code&gt; 验证。&lt;/p&gt;

&lt;p&gt;查看测试服务器 php 系统版本，&lt;code&gt;php -i&lt;/code&gt; 查看系统配置项，当前服务器 php 版本是 7.2.*，当前服务器是 ubuntu 系统， 通过 apt-get 安装的 php 环境，php 默认 &lt;code&gt;upload_max_filesize=2M&lt;/code&gt; ，以及 &lt;code&gt;post_max_size=8M&lt;/code&gt;, 修改其合适的限制大小后，图片上传问题成功解决。&lt;/p&gt;

&lt;p&gt;在实际开发过程中，还是建议限制图片上传的大小，比如表单验证值可改为 &amp;ldquo;require|image|max:20000&amp;rdquo;，限制图片最大不能超过20M，不过最终还是要结合实际需求为准。&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>2018 Ending</title>
      <link>https://reallyli.github.io/post/2018-ending/</link>
      <pubDate>Sun, 09 Dec 2018 21:14:28 +0800</pubDate>
      
      <guid>https://reallyli.github.io/post/2018-ending/</guid>
      
        <description>&lt;blockquote&gt;
&lt;p&gt;2018的结尾，不够歇斯底里，不会花言巧语，努力走出舒适区，事在人为，贵在行动。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;2018年的圣诞节马上要到了，我住的城市还未游有任何下雪的迹象，我却在房间里听起了《圣诞结》，2018还有20天左右，又到了要做年终总结的时候，今年的目标完成了多少，还需要花费多长时间去计划明年的事情。&lt;/p&gt;

&lt;p&gt;有人说我住的城市从不下雪，记忆却堆满冷的感觉，思念的旺季霓虹扫过喧哗的街，把快乐赶得好远。一觉醒来，感觉北京的冬天今天特别冷，还好爱的人都在身边，周末一家人在一起吃着火锅，聊聊家常，即便不开暖气的房子也格外的温暖。&lt;/p&gt;

&lt;p&gt;每年的结尾一个月都会写写这一年的小感想，感叹时间过得真的很快，父母也年过半百，前几天老家也下起了初雪，老人说瑞雪兆丰年，希望新的一年都有新的收获。故乡的月最圆，冬月来了，腊月已经不远了，老人都希望自己的孩子能够早点回家团团圆圆的过新年。&lt;/p&gt;

&lt;p&gt;谈谈今年的技术拓展，下半年的技术是学习 GO，但是自己并没有去深入的学习，只是过了一段时间的基础语法教程，对于深刻理解与初步运用还差很远。&lt;/p&gt;

&lt;p&gt;5月初来到了新公司，同样的老本行，搭建私有项目，构建部署，发布，到持续迭代，在原有的舒适区成长陷入了一段时间的停滞区，没有在原有的项目基础上修修补补，东拼西凑，代码搬运工。偶尔在实际项目过程中逐步去改善自己原有的坏习惯，总是去思考如何去正确的命名，如何去更好的理解需求，并按照规范的设计，去编写更容易理解的代码，这个期间也是不断的翻阅资料，去开源社区看优秀技术人才的开源项目，努力去学习设计模式，软件设计原则。由此10月份也准备了自己的关于 SOLID 原则技术分享会。希望昨天做的这些在未来的某些工作片段中会去结合实际灵活运用。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;关于新一年的展望，会在新年的最后几天有空在来补上。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      
    </item>
    
    <item>
      <title>Github 个人资料展示页</title>
      <link>https://reallyli.github.io/post/profile-summary-for-github.com/</link>
      <pubDate>Wed, 12 Sep 2018 23:17:47 +0800</pubDate>
      
      <guid>https://reallyli.github.io/post/profile-summary-for-github.com/</guid>
      
        <description>&lt;blockquote&gt;
&lt;p&gt;Github 个人资料&lt;a href=&#34;http://oqefp0r4y.bkt.clouddn.com/reallyli%27s%20GitHub%20profile%20summary.pdf&#34;&gt;展示页&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://profile-summary-for-github.com/user/reallyli&#34;&gt;https://profile-summary-for-github.com/user/reallyli&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://eva.hixiaogan.cn/thumb/blog/github.com_user_reallyli,q_60.png&#34; alt=&#34;profile-reallyli-github&#34; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;开源项目链接地址：&lt;a href=&#34;https://github.com/tipsy/profile-summary-for-github&#34;&gt;https://github.com/tipsy/profile-summary-for-github&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      
    </item>
    
    <item>
      <title>Docker笔记第一部分</title>
      <link>https://reallyli.github.io/post/docker-note1/</link>
      <pubDate>Tue, 11 Sep 2018 22:42:34 +0800</pubDate>
      
      <guid>https://reallyli.github.io/post/docker-note1/</guid>
      
        <description>

&lt;blockquote&gt;
&lt;p&gt;有点早的笔记，记录于16年的 Docker 学习笔记，其中有些图片已经找不回来了&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&#34;http://img.mukewang.com/5820943f00011ebf03630199.gif&#34; alt=&#34;docker-intro&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;docker部署项目的优势&#34;&gt;docker部署项目的优势&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;docker容器很轻很快！容器的启动时间是秒级的，大量的节约开发、测试、部署时间。&lt;/li&gt;
&lt;li&gt;内核级的虚拟化，可以实现更高的性能和效率。&lt;/li&gt;
&lt;li&gt;docker容器几乎可以在任意平台上运行，可以实现更轻松的迁移和扩展。&lt;/li&gt;
&lt;li&gt;所有的修改都以增量的方式被分发和更新，可以实现自动化和更高效的管理。&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;docker安装&#34;&gt;docker安装&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;阿里云安装(配专属加速器)&lt;img src=&#34;https://eva.hixiaogan.cn/thumb/blog/docker,q_70.jpeg&#34; alt=&#34;docke&#34; /&gt;&lt;/li&gt;
&lt;li&gt;普通安装 yum or apt-get&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;docker镜像&#34;&gt;docker镜像&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.aliyun.com/search.html&#34;&gt;来自云端的容器镜像服务&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/&#34;&gt;开发者首选之Hub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;细说command&#34;&gt;细说command&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;docker pull ubuntu:12.04 &lt;a href=&#34;https://hub.docker.com/_/ubuntu/&#34;&gt;hub&lt;/a&gt; 从仓库获取镜像&lt;/li&gt;
&lt;li&gt;docker images 显示本地已有的镜像&lt;/li&gt;
&lt;li&gt;docker commit -m &amp;lsquo;update ubuntu:12.04&amp;rsquo; -a &amp;lsquo;Bob&amp;rsquo; &lt;CONTAINER ID&gt; ubuntu:12.05 提交修改的镜像 生成新的镜像 版本是12.05&lt;/li&gt;
&lt;li&gt;docker ps 列出本地正在运行的容器 -a  列出所有的容器包括历史、停止的。&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;docker run&lt;/th&gt;
&lt;th&gt;-ti&lt;/th&gt;
&lt;th&gt;-d&lt;/th&gt;
&lt;th&gt;-rm&lt;/th&gt;
&lt;th&gt;-p&lt;/th&gt;
&lt;th&gt;-v&lt;/th&gt;
&lt;th&gt;&amp;ndash;name=lnmp:1.0&lt;/th&gt;
&lt;th&gt;&amp;ndash;restart=always&lt;/th&gt;
&lt;th&gt;/bin/bash&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;跑车开起来&lt;/td&gt;
&lt;td&gt;终端可视化&lt;/td&gt;
&lt;td&gt;后台执行&lt;/td&gt;
&lt;td&gt;退出就删除&lt;/td&gt;
&lt;td&gt;宿主机：容器内&lt;/td&gt;
&lt;td&gt;宿主机挂载点：容器内挂载点&lt;/td&gt;
&lt;td&gt;容器名&lt;/td&gt;
&lt;td&gt;始终重启&lt;/td&gt;
&lt;td&gt;使用bash_shell 启动容器&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;docker exec -ti CONTAINER ID /bin/bash 进入容器&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;docker rmi image_id&lt;/th&gt;
&lt;th&gt;docker rm container_id&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;删除镜像&lt;/td&gt;
&lt;td&gt;删除容器&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;docker start container_id&lt;/th&gt;
&lt;th&gt;docker stop container_id&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;重新启动停止的容器&lt;/td&gt;
&lt;td&gt;强行停止正在运行的容器&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;本地镜像导出&lt;/th&gt;
&lt;th&gt;本地镜像导入&lt;/th&gt;
&lt;th&gt;容器导出&lt;/th&gt;
&lt;th&gt;容器导入&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;docker save -o name.tar ubuntu:14.04&lt;/td&gt;
&lt;td&gt;docker load &amp;ndash;input name.tar&lt;/td&gt;
&lt;td&gt;docker export container_id  &amp;gt;  name.tar&lt;/td&gt;
&lt;td&gt;cat name.tar&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;容器运行中端口指定&lt;/th&gt;
&lt;th&gt;运行容器端口映射指定&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;iptables -t nat -I DOCKER ! -i docker0 -p tcp -m tcp &amp;ndash;dport 宿主机port  -j DNAT &amp;ndash;to-destination 容器内IP地址:容器内port&lt;/td&gt;
&lt;td&gt;docker run -d -p 5000:5000  -p 3000:80 container_id /bin/bash&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;docker build -t name:1.0 .  使用Dockerfile构建镜像 . 当前目录&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;强大的-dockerfile&#34;&gt;强大的 Dockerfile&lt;/h1&gt;

&lt;p&gt;Dockerfile的每一条指令都创建镜像的一层 一个镜像不能超过27层&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;FROM&lt;/th&gt;
&lt;th&gt;RUN&lt;/th&gt;
&lt;th&gt;EXPOSE&lt;/th&gt;
&lt;th&gt;CMD&lt;/th&gt;
&lt;th&gt;ENTRYPOINT&lt;/th&gt;
&lt;th&gt;COPY&lt;/th&gt;
&lt;th&gt;MAINTAINER&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;告诉docker使用哪个镜像作为基础&lt;/td&gt;
&lt;td&gt;以此为开头的指令会在创建中运行&lt;/td&gt;
&lt;td&gt;向外部开放端口&lt;/td&gt;
&lt;td&gt;启动容器后运行的程序&lt;/td&gt;
&lt;td&gt;执行&lt;/td&gt;
&lt;td&gt;复制指定目录或文件到容器内&lt;/td&gt;
&lt;td&gt;镜像构建者&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;FROM ubuntu:1.0&lt;/td&gt;
&lt;td&gt;RUN apt-get update&lt;/td&gt;
&lt;td&gt;EXPOSE 80 443&lt;/td&gt;
&lt;td&gt;CMD [&amp;ldquo;nginx&amp;rdquo;, &amp;ldquo;-g&amp;rdquo;, &amp;ldquo;daemon off;&amp;rdquo;]&lt;/td&gt;
&lt;td&gt;ENTRYPOINT /usr/local/startall.sh&lt;/td&gt;
&lt;td&gt;COPY startall.sh /usr/local/&lt;/td&gt;
&lt;td&gt;MAINTAINER reallyli &lt;a href=&#34;mailto:zlisreallyli@outlook.com&#34;&gt;zlisreallyli@outlook.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Dockerfile 相关的总结&lt;/p&gt;

&lt;p&gt;redis :&lt;img src=&#34;https://eva.hixiaogan.cn/thumb/blog/dockerfile_redisnew,q_70.jpeg&#34; alt=&#34;dockerfile_redisne&#34; /&gt;&lt;/p&gt;

&lt;p&gt;php-fpm :&lt;img src=&#34;https://eva.hixiaogan.cn/thumb/blog/dockerfile_php,q_70.jpeg&#34; alt=&#34;dockerfile_php&#34; /&gt;&lt;/p&gt;

&lt;p&gt;nginx : &lt;img src=&#34;https://eva.hixiaogan.cn/thumb/blog/dockerfile_nginx,q_70.jpeg&#34; alt=&#34;dockerfile_nginx&#34; /&gt;&lt;/p&gt;

&lt;p&gt;memcached : &lt;img src=&#34;https://eva.hixiaogan.cn/thumb/blog/dockerfile_mem,q_70.jpeg&#34; alt=&#34;dockerfile_me&#34; /&gt;&lt;/p&gt;

&lt;p&gt;https : &lt;img src=&#34;https://eva.hixiaogan.cn/thumb/blog/dockerfile_https,q_70.jpeg&#34; alt=&#34;dockerfile_https&#34; /&gt;&lt;/p&gt;

&lt;p&gt;gearmand : &lt;img src=&#34;https://eva.hixiaogan.cn/thumb/blog/dockerfile_gearman,q_70.jpeg&#34; alt=&#34;dockerfile_gearman&#34; /&gt;&lt;/p&gt;

&lt;p&gt;crond : &lt;img src=&#34;https://eva.hixiaogan.cn/thumb/blog/dockerfile_cron,q_70.jpeg&#34; alt=&#34;dockerfile_cron&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;docker容器内开启ssh服务&#34;&gt;docker容器内开启ssh服务&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;yum install passwd yum install openssh-server #安装ssh服务端  passwd 命令直接设置 登录密码&lt;/li&gt;
&lt;li&gt;/etc/ssh/sshd_config #设置端口，注释不需要的设置，如:HostKey&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;dsa_key&lt;/th&gt;
&lt;th&gt;rsa_key&lt;/th&gt;
&lt;th&gt;ED25519_key&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ssh-keygen -t dsa -f /etc/ssh/ssh_host_dsa_key&lt;/td&gt;
&lt;td&gt;ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key&lt;/td&gt;
&lt;td&gt;ssh-keygen -t dsa -f /etc/ssh/ssh_host_ED25519_key&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;防SSH_BRUTEFORCE攻击措施&lt;/td&gt;
&lt;td&gt;RSA认证&lt;/td&gt;
&lt;td&gt;开启公钥验证&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;mdash;&lt;/td&gt;
&lt;td&gt;&amp;mdash;&lt;/td&gt;
&lt;td&gt;&amp;mdash;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;1.修改Port 4484; 2.禁用root PermitRootLogin no&lt;/td&gt;
&lt;td&gt;RSAAuthentication yes&lt;/td&gt;
&lt;td&gt;PubkeyAuthentication yes&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&#34;docker-理解&#34;&gt;docker 理解&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://dockone.io/article/783&#34;&gt;10张图带你深入理解Docker容器和镜像&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://dockone.io/article/111&#34;&gt;经典Docker入门教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-open.com/lib/view/open1423703640748.html&#34;&gt;非常详细的 Docker 学习笔记&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.imooc.com/article/14325&#34;&gt;老司机的docker学习笔记&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.kancloud.cn/search?keyword=docker&amp;amp;page=1&#34;&gt;免费docker书籍&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;docker-pdf&#34;&gt;docker pdf&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://oqefp0r4y.bkt.clouddn.com/Docker%20%E2%80%94%E2%80%94%20%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5.pdf&#34;&gt;Docker-从入门到实践&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>OpenLDAP 使用 Shadow Account 条目</title>
      <link>https://reallyli.github.io/post/ldap-use-shadow-account/</link>
      <pubDate>Tue, 04 Sep 2018 10:29:04 +0800</pubDate>
      
      <guid>https://reallyli.github.io/post/ldap-use-shadow-account/</guid>
      
        <description>

&lt;blockquote&gt;
&lt;p&gt;LDAP 中使用 Shadow Account 条目可以有效的设置用户登录的过期时间，过期以后还有多少可以登陆，每隔多少天强制更换密码，提前多少天开始提示密码即将过期。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;下面记录一下属性列表-方便以后查阅&#34;&gt;下面记录一下属性列表，方便以后查阅&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;shadowLastChange: 密码从1970年1月1日开始, 到最近一次修改, 一共间隔了多少天. 比如这里指定成16967就表示2016年6月15日. 也可以直接获取当天的日期,方法为:在系统里 useradd 一个用户,查看 &lt;code&gt;/etc/shadow&lt;/code&gt; 中该用户的第三个值, 即是该值. 该值如果设置成0, 则表示下次登陆将强制修改密码, 用户修改密码成功以后, 该值将发生对应的变化&lt;/li&gt;
&lt;li&gt;shadowMin: 密码从 &lt;code&gt;shadowLastChange&lt;/code&gt; 指定的日期开始, 到多少天以后才能再次修改密码, 防止某些人天天没事就修改密码, 此值设置成0表示不限制&lt;/li&gt;
&lt;li&gt;shadowMax: 密码从 &lt;code&gt;shadowLastChange&lt;/code&gt; 指定的日期开始, 到多少天以后过期(即多少天后必须更改密码)&lt;/li&gt;
&lt;li&gt;shadowInactive: 密码过期以后还可以登陆多少天(每次登陆都会要求更改密码), 如果超过此值指定的天数, 下次登陆时会提示 &lt;code&gt;Your account has expired; please contact your system administrator&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;shadowWarning: 提前多少天开始警告用户密码将会过期&lt;/li&gt;
&lt;li&gt;shadowExpire: 密码从1970年1月1日开始, 多少天以后将会过期, 这里一般用不到&lt;/li&gt;
&lt;li&gt;shadowFlag: 暂时无用&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;一般属性的参考值&#34;&gt;一般属性的参考值&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;shadowLastChange: 0&lt;/li&gt;
&lt;li&gt;shadowMin: 0&lt;/li&gt;
&lt;li&gt;shadowMax: 90 #每隔90天强制更换密码&lt;/li&gt;
&lt;li&gt;shadowInactive: 7 #过期以后还有7天可以登陆,每次登陆都会提示修改密码&lt;/li&gt;
&lt;li&gt;shadowWarning: 8 #提前8天开始提示密码即将过期&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;laravel-使用-ldap-设置-objectclass-shadowaccount-条目-下面举例向-ldap-server-中添加一个新成员&#34;&gt;Laravel 使用 LDAP，设置 objectclass shadowAccount 条目，下面举例向 LDAP Server 中添加一个新成员&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;$user = Adldap::make()-&amp;gt;user(
  [
    &amp;#39;mail&amp;#39; =&amp;gt; $data[&amp;#39;email&amp;#39;],
    &amp;#39;uid&amp;#39; =&amp;gt; $data[&amp;#39;uid&amp;#39;],
    &amp;#39;cn&amp;#39; =&amp;gt; $data[&amp;#39;uid&amp;#39;],
    &amp;#39;sn&amp;#39; =&amp;gt; $data[&amp;#39;uid&amp;#39;],
    &amp;#39;userpassword&amp;#39; =&amp;gt; $data[&amp;#39;password&amp;#39;],
  ]
);
$user-&amp;gt;setAttribute(&amp;#39;objectclass&amp;#39;,
  [
    &amp;#39;shadowAccount&amp;#39;,
    &amp;#39;inetOrgPerson&amp;#39;
  ]
);
$user-&amp;gt;setDn(&amp;#39;uid=&amp;#39; . $data[&amp;#39;uid&amp;#39;] . &amp;#39;,&amp;#39; . $user-&amp;gt;getDnBuilder()-&amp;gt;get());&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h1 id=&#34;给某个成员设置账号失效时间&#34;&gt;给某个成员设置账号失效时间&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;$user = Adldap::search()-&amp;gt;where(&amp;#39;mail&amp;#39;, &amp;#39;xxx@xx.com&amp;#39;)-&amp;gt;first();
$user-&amp;gt;shadowExpire = 100;
$user-&amp;gt;save();&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      
    </item>
    
    <item>
      <title>Just Back Home</title>
      <link>https://reallyli.github.io/post/just-back-home/</link>
      <pubDate>Sun, 02 Sep 2018 20:40:36 +0800</pubDate>
      
      <guid>https://reallyli.github.io/post/just-back-home/</guid>
      
        <description>&lt;blockquote&gt;
&lt;p&gt;服务器明天都要到期了，不知不觉已经一年了，时间流转如此之快，父母渐渐的老去，开始体会多去为他们着想。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这次回家，显然是长胖了，已经大半年没有健身了，记起自己去年那股拼尽，即使是在寒冷的冬天，我也保持了一周四练。胸背肩手腿的轮番轰炸。今年四月份去了新公司，新的旅途，新的方向。开始慢慢去思考很多，包括技术，包括业余生活，包括明天。或许每个人都会有那么一段时间，发现自己以前坚持做的一件事情，现在已经不那么上心了，但是还是会在潜意识里告诉自己，你已经很久没有坚持了。不必说是时间，也不必说是忙碌，这个世界上的大部分人本身坚持去做一件自己原本信誓旦的事情，都不会坚持到永远，这个社会上的人不是一个单一的个体。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://eva.hixiaogan.cn/thumb/blog/xiaogan_wuhan_20180902,q_70.jpg&#34; alt=&#34;xiaogan&#34; /&gt;&lt;/p&gt;

&lt;p&gt;多长时间没有发微博了，记得上次发微博都是6月30号，今天已经是9月1号了。记得去年十月一，也在老巷子和堂一起吃了场午夜食堂，红烧鲫鱼，美味十足。今年比往年相比早了一个月，不过还是老地方。下次见面就是明年了，时间总是惊人的流转，剧情不反转，慵懒的下去，躺在沙发上准备小憩会，听见外面下起雨来，时间恍恍惚惚就要到4点了，犯困听老唱片，下一站，和独男，37℃，再续老巷情怀，从深圳到北京，在辗转武汉，young blood，2018已经进入金九银十的阶段，走过无数个日夜，有家的地方最温暖。&lt;/p&gt;


&lt;link rel=&#34;stylesheet&#34; href=&#34;https://reallyli.github.io/css/hugo-easy-gallery.css&#34; /&gt;
&lt;div class=&#34;box&#34;&gt;
&lt;figure  class=&#34;center&#34;  itemprop=&#34;associatedMedia&#34;
  itemscope itemtype=&#34;http://schema.org/ImageObject&#34; &gt;
    &lt;div class=&#34;img&#34;&gt;
      &lt;img itemprop=&#34;thumbnail&#34; src=&#34;https://eva.hixiaogan.cn/thumb/blog/wuhan_meeting_20180902,q_70.jpg&#34; alt=&#34;Wuhan Keep Real&#34;/&gt;
    &lt;/div&gt;
    &lt;a href=&#34;https://eva.hixiaogan.cn/thumb/blog/wuhan_meeting_20180902,q_70.jpg&#34; itemprop=&#34;contentUrl&#34;&gt;&lt;/a&gt;
      &lt;figcaption&gt;&lt;h4&gt;武汉再聚&lt;/h4&gt;
      &lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/div&gt;


&lt;p&gt;列车摇摇晃晃，9月1号又是开学的时间，我都忘记上学时候的暑假是怎么过的了，不想去说什么假如，也不会去说当初，重要的是当下。微信公众号《王耳朵先生》推了一篇文章，《爸妈，同学家里有15套拆迁房，我为什么要读书》，针对于这个问题，阐述了读书的重要性，其实可以衍生出另外一个问题，就是《孩子，你同学家里都有15套拆迁房，他为什么每次都能拿班级第一名》。这个问题每个人的理解不一样。下面文章作者的回复很好：读书是为了让你知道，接受不公平，是一个人必然的过程，而不是一味埋怨；读书是为了让你免于生活沦落，和阶层下滑，相反，拥有向上走的能力；读书，还是为了让你拥有不一样的视野，拥有更多选择的权利。我很接受这样的看法，随着年龄的增长，感觉读书变得越发的重要，而更多的选择权在于自己，通过读书，获得更多的选择权，去做更多喜欢做的事，而不是一味的固守，一味的接受平庸的现实。这次回家的重要性，不言而喻了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://eva.hixiaogan.cn/thumb/blog/home_20180902,q_70.jpg&#34; alt=&#34;xiaogan&#34; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;9月你好，9月各自安好，秋高气爽的季节，开始加足马力，选择一直向前。最后一个季度，愿多一份平稳，多一份保佑。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      
    </item>
    
    <item>
      <title>Laravel 最佳实践思考</title>
      <link>https://reallyli.github.io/post/laravel-best-practices/</link>
      <pubDate>Wed, 29 Aug 2018 22:44:40 +0800</pubDate>
      
      <guid>https://reallyli.github.io/post/laravel-best-practices/</guid>
      
        <description>

&lt;blockquote&gt;
&lt;p&gt;开始写一个项目之前，我们都会考虑很多问题。上到服务器层，下到代码层。以至于选用哪种语言开发新项目，一要保证开发效率，二要贴合产品需求。对于启动一个 Laravel 项目，必须在原有代码生态上制定出业界认同的标准规范。符合软件设计原则，尽量贴合底层包的设计优先。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;新项目启动，刚开始都会开需求研讨会，拆分细节，拆分功能模块，建立项目流程管理机制。一步一步落实到开发者层面，中间分布式衔接到测试者之样例，运营者账号管理，项目经理进度把控，运维服务器调度等等多个环节。对于 PHP 开发者来说，可能每个公司制定的代码规范都不尽相同，虽然有起初的 PSR 业界规范，但是数万个程序员依然有数万中代码风格。Github 上有篇文章介绍 &lt;a href=&#34;https://github.com/alexeymezenin/laravel-best-practices&#34;&gt;Laravel Best Practices&lt;/a&gt;，起初很早的时候在 LC 上阅读过这篇文章，可以帮助我们理解面向对象的 SOLID 原则。不管是用什么语言开始你的新项目，规范化的 start 一件事情，永远都是头等大事，这即是真切之言。不要让其在迫不得已的后期 restart。&lt;/p&gt;

&lt;p&gt;针对文章的不少代码片段在此做一个总结，方便以后查阅。也时常去思考用如何在实践过程中也出更加贴近与 Laravel 的代码。&lt;/p&gt;

&lt;h1 id=&#34;单一责任原则&#34;&gt;单一责任原则&lt;/h1&gt;

&lt;p&gt;一个类和一个方法应该只有一个原则，Laravel Model 提供了属性修改器的功能，可以更加友好的去格式化我们需要的属性，对于调用 Model 的 Services 不应该关心你想获取的属性内部如何处理的。但是如何简化 Model 层也是开发过程中值得思考的问题&lt;/p&gt;

&lt;h1 id=&#34;简化控制器&#34;&gt;简化控制器&lt;/h1&gt;

&lt;p&gt;实际开发中我们应该将查询构造器相关的代码放入 Eloquent 模型或存储库类中。与控制器层衔接的应该是上层的 Service、Repository&lt;/p&gt;

&lt;h1 id=&#34;验证类归类&#34;&gt;验证类归类&lt;/h1&gt;

&lt;p&gt;使用 Laravel 构造私有 Api 服务器的项目，或者一般的 Web 项目都少不了表单验证、前端数据校验。那么最合理的做法应该将验证逻辑抽离成一个子目录，每个 Api 接口对应一个 Request 类，而这个类继承的是 Laravel 核心基类 Http Request，此类中包含 验证规则，验证信息提示，验证结果三个核心方法。&lt;/p&gt;

&lt;h1 id=&#34;杜绝重复代码块&#34;&gt;杜绝重复代码块&lt;/h1&gt;

&lt;p&gt;老生常谈的话题，软件设计原则，尽可能的重用代码，Give Up DRY!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;带完结&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      
    </item>
    
    <item>
      <title>简述 Event Loop 运行机制</title>
      <link>https://reallyli.github.io/post/event-loop/</link>
      <pubDate>Fri, 24 Aug 2018 13:34:52 +0800</pubDate>
      
      <guid>https://reallyli.github.io/post/event-loop/</guid>
      
        <description>

&lt;blockquote&gt;
&lt;p&gt;一个 event loop只要存在，就会不断执行下边的步骤&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;在 tasks 队列中选择最老的一个task，用户代理可以选择任何 tas k队列，如果没有可选的任务，则跳到下边的 microtasks 步骤。&lt;/li&gt;
&lt;li&gt;将上边选择的 task 设置为正在运行的task。&lt;/li&gt;
&lt;li&gt;Run: 运行被选择的 task。&lt;/li&gt;
&lt;li&gt;将 event loop 的 currently running task 变为 null。&lt;/li&gt;
&lt;li&gt;从 task 队列里移除前边运行的task。&lt;/li&gt;
&lt;li&gt;Microtasks: 执行 microtasks 任务检查点。（也就是执行 microtasks 队列里的任务）&lt;/li&gt;
&lt;li&gt;更新渲染（Update the rendering）&amp;hellip;&lt;/li&gt;
&lt;li&gt;如果这是一个 worker event loop，但是没有任务在 task 队列中，并且 WorkerGlobalScope 对象的 closing 标识为 true，则销毁event loop，中止这些步骤，然后进行定义在 Web workers 章节的 run a worker。&lt;/li&gt;
&lt;li&gt;返回到第一步。&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;概括-event-loop-机制&#34;&gt;概括 Event Loop 机制&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;event loop 会不断循环的去取 tasks 队列的中最老的一个任务推入栈中执行，并在当次循环里依次执行并清空 microtask 队列里的任务。&lt;/li&gt;
&lt;li&gt;执行完 microtask 队列里的任务，有可能会渲染更新。（浏览器很聪明，在一帧以内的多次 dom 变动浏览器不会立即响应，而是会积攒变动以最高60HZ的频率更新视图）&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;比喻-event-loop-机制&#34;&gt;比喻 Event Loop 机制&lt;/h1&gt;

&lt;p&gt;主线程类似一个加工厂，它只有一条流水线，待执行的任务就是流水线上的原料，只有前一个加工完，后一个才能进行。event loops 就是把原料放上流水线的工人。只要已经放在流水线上的，它们会被依次处理，称为同步任务。一些待处理的原料，工人会按照它们的种类排序，在适当的时机放上流水线，这些称为异步任务。&lt;/p&gt;

&lt;h1 id=&#34;推荐文章&#34;&gt;推荐文章&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aooy/blog/issues/5&#34;&gt;https://github.com/aooy/blog/issues/5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rhinel/blog-word/issues/4&#34;&gt;https://github.com/rhinel/blog-word/issues/4&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
      
    </item>
    
    <item>
      <title>Go 日常笔记 V1.0</title>
      <link>https://reallyli.github.io/post/go-github-note/</link>
      <pubDate>Sun, 19 Aug 2018 14:44:08 +0800</pubDate>
      
      <guid>https://reallyli.github.io/post/go-github-note/</guid>
      
        <description>

&lt;h1 id=&#34;总结一些-go-在-github-上的一些热门-repo&#34;&gt;总结一些 Go 在 Github 上的一些热门 Repo&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#tool&#34;&gt;Go dependency management tool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#framworks&#34;&gt;Web frameworks for Go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#beego&#34;&gt;Beego framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#gin&#34;&gt;Gin framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#group&#34;&gt;社区&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#others&#34;&gt;其他&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#demo&#34;&gt;Demo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#books&#34;&gt;Books&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;tool&#34;&gt;Go dependency management tool&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;dep&lt;/code&gt; 是 Go 的依赖管理工具。 它需要 &lt;code&gt;Go 1.9&lt;/code&gt; 或更新版本才能编译。&lt;a href=&#34;https://golang.github.io/dep/&#34;&gt;文档地址&lt;/a&gt;，安装方法如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ brew install dep
$ brew upgrade dep
&lt;span class=&#34;c1&#34;&gt;# or&lt;/span&gt;
$ curl https://raw.githubusercontent.com/golang/dep/master/install.sh &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sh

&lt;span class=&#34;c1&#34;&gt;# or&lt;/span&gt;
$ go get -u github.com/golang/dep/cmd/dep&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr /&gt;

&lt;h2 id=&#34;frameworks&#34;&gt;Web frameworks for Go&lt;/h2&gt;

&lt;p&gt;总结 Go 最热门的框架，时常保持更新，&lt;a href=&#34;https://github.com/mingrammer/go-web-framework-stars&#34;&gt;传送门&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;beego&#34;&gt;Beego framework&lt;/h2&gt;

&lt;p&gt;Go 编程语言的开源，高性能Web框架，用于在 Go 中快速开发 &lt;code&gt;RESTful API&lt;/code&gt;，Web 应用程序和后端服务。&lt;a href=&#34;https://beego.me/&#34;&gt;文档地址&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;gin&#34;&gt;Gin framework&lt;/h2&gt;

&lt;p&gt;Gin 是一个用 Go（Golang）编写的 HTTP Web 框架。 它具有类似 Martini 的 API，具有更好的性能 - 速度提高了40倍。&lt;a href=&#34;https://gin-gonic.github.io/gin/&#34;&gt;文档地址&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;group&#34;&gt;社区&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gowalker.org/&#34;&gt;gowalker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://golangcaff.com/&#34;&gt;golangcaff&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://studygolang.com/&#34;&gt;studygolang&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;others&#34;&gt;其他&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;在线运行 Go 程序-&lt;a href=&#34;https://play.golang.org/&#34;&gt;play&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;初步学习教程-&lt;a href=&#34;https://golangbot.com/golang-tutorial-part-1-introduction-and-installation/&#34;&gt;golangbot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Golang 优秀开源项目汇总 - &lt;a href=&#34;https://github.com/hackstoic/golang-open-source-projects&#34;&gt;Repo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;demo&#34;&gt;Demo&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;掘金小册，基于 Go 语言构建企业级的 RESTful API 服务 - &lt;a href=&#34;https://github.com/lexkong/apiserver&#34;&gt;apiserver&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;books&#34;&gt;Books&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;经典 - &lt;a href=&#34;http://gopl-zh.codeyu.com/&#34;&gt;Go 语言圣经简体中文 pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>Go 教程第五部分之常量</title>
      <link>https://reallyli.github.io/post/go-tutorial-note-5/</link>
      <pubDate>Sun, 19 Aug 2018 11:59:29 +0800</pubDate>
      
      <guid>https://reallyli.github.io/post/go-tutorial-note-5/</guid>
      
        <description>

&lt;p&gt;&lt;img src=&#34;https://eva.hixiaogan.cn/thumb/blog/golang_const.png&#34; alt=&#34;golang_const&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;常量&#34;&gt;常量&lt;/h1&gt;

&lt;h2 id=&#34;定义&#34;&gt;定义&lt;/h2&gt;

&lt;p&gt;术语常量在 Go 中表示定值，例如 5，15，&amp;rsquo;hello world&amp;rsquo; 等，常量一旦定义就不能重新分配其他的任何值，下面就是一个错误的例子，代码编译错误，无法重新分配新的值。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// [error] reassignment not allowed
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;应该在编译前赋予好常量的值，下面的例子告诉我们无法将其分配给函数调用返回的值。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
  &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;s&#34;&gt;&amp;#34;math&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello World Playground&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Sqrt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Allowed
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;math&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Sqrt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Not Allowed
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;上面运行结果会出现编译错误，&lt;code&gt;const initializer math.Sqrt（4）&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;字符串常量&#34;&gt;字符串常量&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;值得注意的是字符串常量是无类型的&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Go 是一种强类型语言。所有的变量都需要显式类型，看下面的例子&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;reallyli&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;type %T value %v&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;以上的例子会输出 类型是 String ， 那么 String 就是其默认类型。通过下面的例子我们可以创建一个类型化常量&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;reallyli&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Go 是一种强类型语言，&lt;strong&gt;&lt;em&gt;不允许在分配期间混合类型&lt;/em&gt;&lt;/strong&gt;，看下面的例子&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;defaultName&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;reallyli&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;myString&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//string 类型的别名
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;customName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;myString&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;reallyli&amp;#34;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;customName&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;defaultName&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//not allowed 编译器认为两个变量的类型不一样 不能被重新赋值 
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;布尔常量&#34;&gt;布尔常量&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;trueConst&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//定义一个常量 trueConst
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;myBool&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 定义一个变量类型 为 bool 的别名
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;defaultBool&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;trueConst&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//allowed // 定义一个变量 defaultBool
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;customBool&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;myBool&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;trueConst&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//allowed 定一个变量类型为 myBool 的变量 customBool
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;defaultBool&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;customBool&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//not allowed 两个类型不一样的变量 不能被重新赋值
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;数字常量&#34;&gt;数字常量&lt;/h2&gt;

&lt;p&gt;数字常量包括整数、浮点数和复数常量，看下面的例子&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;  
    &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;intVar&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;int32Var&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int32&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;float64Var&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;float64&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;complex64Var&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;complex64&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;intVar&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;intVar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;\nint32Var&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;int32Var&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;\nfloat64Var&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;float64Var&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;\ncomplex64Var&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;complex64Var&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;数字表达式&#34;&gt;数字表达式&lt;/h2&gt;

&lt;p&gt;数值常量可以在表达式中自由混合和匹配，只有在将它们分配给变量或在需要类型的代码中的任何位置使用时才需要类型。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
  &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;5.9&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;a&amp;#39;s type %T value %v&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// a&amp;#39;s type float64 value 0.7375
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      
    </item>
    
    <item>
      <title>难得七夕</title>
      <link>https://reallyli.github.io/post/tanabata-2018/</link>
      <pubDate>Fri, 17 Aug 2018 22:18:50 +0800</pubDate>
      
      <guid>https://reallyli.github.io/post/tanabata-2018/</guid>
      
        <description>&lt;p&gt;&lt;img src=&#34;https://eva.hixiaogan.cn/thumb/blog/tanabata.png&#34; alt=&#34;tanabata&#34; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;每年的七夕节好像并没有想象中的那么深刻，朋友圈还是往常节日一样，总有那么一批秀幸福的人。今天也没有多少特殊的纪念，照常上班，充满生命力的挤公交，接受各种任务的洗礼。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;早上习惯性的塞上耳机，行走在通往公司的路上，耳机里随机到了陶喆《21》这首歌，突然想起自己一个人在珠海斗门的实习日子，那时候总是奔往多个地方，那时天真的很蓝，在破旧的站台等公交的日子，最重要的是那时候刚好21。一切都是那么机缘巧合，每天醒来的日子，看看阳台外的远山，或许今天会是雨天，那就快到午饭时间，打包一份广东特色盒饭，回到家中听着音乐，欣赏窗台外的风景，一阵午睡足以让人更加清醒。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;4年&lt;/em&gt;&lt;/strong&gt; 多去了，那些刚入社会不久的那个我，显得更加谨小慎微。程序人生3年有余，多了一份耐心，却少了一份纯粹。已经 &lt;strong&gt;&lt;em&gt;好几年&lt;/em&gt;&lt;/strong&gt; 没有触碰篮球了，已经快 &lt;strong&gt;&lt;em&gt;8个月&lt;/em&gt;&lt;/strong&gt; 没有健身了，甚至七夕节的今天，我也会忘记给心爱的她献上美丽的鲜花。人生多少都会难得糊涂，甚至会面对无数个抉择。选择开始程序人生，有了新的人生目标，多少都会对日新月异的技术变更感到些许无措，选择进入婚姻的殿堂，有了更大的责任和重担，多少都会对渐渐上涨的房租和消费开支些许感叹。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;回到主题，今天是2018年的七夕节，去年怎么过的我也没有多大的印象，现在时间是将近晚上11点，最近在抓紧时间学习新的东西，希望把自己的知识面拓展宽，不能一直停留在舒适区，尝试去改变写学习方法和提升学习效率，接下来的四个月我将持续更新自己的站点，给自己定阶段性的任务。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;感谢我的 &lt;strong&gt;&lt;em&gt;wife&lt;/em&gt;&lt;/strong&gt; 一直在背后默默的支持我，婚后的第一个 &lt;strong&gt;&lt;em&gt;七夕节&lt;/em&gt;&lt;/strong&gt; 我没有给你想要的惊喜，平平淡淡，真真切切，这些话未免有些俗不可耐。男人的前线战场，愈演愈烈，没有两个自己，只有一个她，宽容和谅解，才是毕升的修行。&lt;/p&gt;


&lt;link rel=&#34;stylesheet&#34; href=&#34;https://reallyli.github.io/css/hugo-easy-gallery.css&#34; /&gt;
&lt;div class=&#34;box&#34;&gt;
&lt;figure  class=&#34;center&#34;  itemprop=&#34;associatedMedia&#34;
  itemscope itemtype=&#34;http://schema.org/ImageObject&#34; &gt;
    &lt;div class=&#34;img&#34;&gt;
      &lt;img itemprop=&#34;thumbnail&#34; src=&#34;https://eva.hixiaogan.cn/thumb/blog/traveler_2018.jpg&#34; alt=&#34;马来西亚之旅&#34;/&gt;
    &lt;/div&gt;
    &lt;a href=&#34;https://eva.hixiaogan.cn/thumb/blog/traveler_2018.jpg&#34; itemprop=&#34;contentUrl&#34;&gt;&lt;/a&gt;
      &lt;figcaption&gt;&lt;h4&gt;2018-马来西亚-蜜月旅行&lt;/h4&gt;
      &lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/div&gt;


&lt;hr /&gt;

&lt;p&gt;26岁，年轻气盛的年纪，血气方刚。该去实现自己想法的年纪，该去试着突破自我的年纪。在应有的技术层面多做加法，在应有的人脉圈内多做交集。30岁以后慢慢做减法，试着舍弃一些不该承受的责任，试着顾全大局。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;我对未来想说，如果未来不是那个真的我，为何今天还在此虚度。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;莫忘初心，方能始终；程序人生，快马加鞭；婚姻和事业并行，感悟一生&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      
    </item>
    
    <item>
      <title>Go 教程第四部分之变量类型</title>
      <link>https://reallyli.github.io/post/go-tutorial-note-4/</link>
      <pubDate>Sat, 11 Aug 2018 12:29:20 +0800</pubDate>
      
      <guid>https://reallyli.github.io/post/go-tutorial-note-4/</guid>
      
        <description>

&lt;p&gt;&lt;img src=&#34;https://eva.hixiaogan.cn/thumb/blog/golang_var.png&#34; alt=&#34;golang_var&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;变量的基本类型&#34;&gt;变量的基本类型&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Bool&lt;/li&gt;
&lt;li&gt;Numeric Types&lt;/li&gt;
&lt;li&gt;String&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;bool&#34;&gt;Bool&lt;/h2&gt;

&lt;p&gt;bool类型表示布尔值，为true或false。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;false&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;a:&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;b:&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;c:&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;d;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;numeric&#34;&gt;Numeric&lt;/h2&gt;

&lt;h3 id=&#34;有符号整数&#34;&gt;有符号整数&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;类型&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;大小&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;范围&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;int8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8位&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-128到127&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;int16&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;16位&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-32768到32767&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;int32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32位&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-2147483648到2147483647&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;int64&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;64位&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-9223372036854775808到9223372036854775807&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;int&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;表示32位或64位整数，具体取决于底层平台。除非需要使用特定大小的整数，否则通常应使用int来表示整数&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32位系统中的-2147483648到2147483647和64位系统中的-9223372036854775808到9223372036854775807&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;value of a is&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;and b is&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;可以使用 Printf 方法中的 ％T 格式说明符打印变量的类型。Go 有一个不安全的包，它有一个 Sizeof 函数，它以字节为单位返回传递给它的变量的大小。应谨慎使用不安全的软件包，因为使用它的代码可能存在可移植性问题，以下代码中使用它只是举例说明。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;&amp;#34;unsafe&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;type of a is %T, size of a is %d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;unsafe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//type and size of a
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;\ntype of b is %T, size of b is %d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;unsafe&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Sizeof&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//type and size of b
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;无符号整数&#34;&gt;无符号整数&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;类型&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;大小&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;范围&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;int8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8位&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-128到127&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;int16&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;16位&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-32768到32767&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;int32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32位&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-2147483648到2147483647&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;int64&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;64位&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-9223372036854775808到9223372036854775807&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;int&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;表示32位或64位整数，具体取决于底层平台。除非需要使用特定大小的整数，否则通常应使用int来表示整数&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32位系统中的-2147483648到2147483647和64位系统中的-9223372036854775808到9223372036854775807&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;浮点类型&#34;&gt;浮点类型&lt;/h2&gt;

&lt;p&gt;float32： 32位浮点数
float64： 64位浮点数&lt;/p&gt;

&lt;h2 id=&#34;复杂类型&#34;&gt;复杂类型&lt;/h2&gt;

&lt;p&gt;complex64：具有float32实部和虚部的复数数字
complex128：具有float64实部和虚部的复数&lt;/p&gt;

&lt;p&gt;内置函数复合体用于构造具有实部和虚部的复数。复杂函数具有以下定义&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;complex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;FloatType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ComplexType&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;它将实部和虚部作为参数并返回复杂类型。实部和虚部都应该是相同的类型。即float32或float64。如果实部和虚部都是float32，则此函数返回complex64类型的复数值。如果实部和虚部都是float64类型，则此函数返回complex128类型的复数值&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;complex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;4i&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;sum:&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;其他数字类型&#34;&gt;其他数字类型&lt;/h2&gt;

&lt;p&gt;byte 是 unit8 的别名
符文是 int32 的别名&lt;/p&gt;

&lt;h2 id=&#34;字符串类型&#34;&gt;字符串类型&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;reallyli&amp;#34;&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;ago&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;26&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;My name is &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;, ago is&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ago&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;类型转换&#34;&gt;类型转换&lt;/h2&gt;

&lt;p&gt;Go 对显式输入非常严格。没有自动类型转换，两个不同类型的变量进行运算需要进行强制转换&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;1.22&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// sum := int(a) + b //yes
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;sum:&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;invalid operation: a + b (mismatched types float64 and int)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;  
    &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;float64&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//this statement will not work without explicit conversion
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;// var j float64 = float64(i) // yes
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;j&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      
    </item>
    
    <item>
      <title>Go 教程第三部分之变量语法</title>
      <link>https://reallyli.github.io/post/go-tutorial-note-3/</link>
      <pubDate>Fri, 10 Aug 2018 09:46:57 +0800</pubDate>
      
      <guid>https://reallyli.github.io/post/go-tutorial-note-3/</guid>
      
        <description>

&lt;p&gt;&lt;img src=&#34;https://eva.hixiaogan.cn/thumb/blog/go_tutorial_3.png&#34; alt=&#34;go_tutorial_3&#34; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;变量是为存储特定类型的值的内存位置指定的名称。在 go 中声明变量有各种语法。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;声明一个变量&#34;&gt;声明一个变量&lt;/h1&gt;

&lt;p&gt;比如声明一个 name 的变量&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;My age is&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;该语句 &lt;code&gt;var age int&lt;/code&gt; 声明了一个变量类型为 int 的变量。我们没有为变量分配任何值。一般情况下没有为变量赋值，那么改变量的初始值默认为0。运行上面程序会输出如下结果。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;nx&#34;&gt;My&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ago&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;当然实际应用中也可以给变量赋其他类型的值，就上面的例子而言， 我们可以给变量 name 赋予任何整数值&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// variable declaration
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;my age is &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;29&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//assignment
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;my age is&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;54&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//assignment
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;my new age is&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h1 id=&#34;声明具有初始值的变量&#34;&gt;声明具有初始值的变量&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;变量在声明的时候也可以赋予初始值，基本语法是 &lt;code&gt;var name type = initialvalue&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;29&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// variable declaration with initial value
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;my age is&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h1 id=&#34;类型推断&#34;&gt;类型推断&lt;/h1&gt;

&lt;p&gt;如果变量在声明的时候已经赋予了初始值，Go 将自动根据该初始值推断该变量的类型。因此，如果变量具有初始值，则可以*省略*变量声明中的类型。基本语法是 &lt;code&gt;var name = initialvalue&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;29&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// type will be inferred
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;my age is&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h1 id=&#34;多变量声明&#34;&gt;多变量声明&lt;/h1&gt;

&lt;p&gt;可以在单个语句中声明多个变量。基本语法是 &lt;code&gt;var name1，name2 type = initialvalue1，initialvalue2&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;height&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//declaring multiple variables, &amp;#34;int&amp;#34; is dropped
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Width is&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Height is&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;在某些情况下，我们可能希望在单个语句中声明属于不同类型的变量。基本语法如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;  
      &lt;span class=&#34;nx&#34;&gt;name1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;initialvalue1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nx&#34;&gt;name2&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;initialvalue2&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;再看看下面的例子&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;   &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;naveen&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;29&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;height&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;my name is&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;, age is&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;and height is&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// output my name is naveen, age is 29 and height is 0
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h1 id=&#34;简短的声明&#34;&gt;简短的声明&lt;/h1&gt;

&lt;p&gt;Go还提供了另一种简洁的方式来声明变量。这称为简写声明，它使用 ：= 运算符。基本语法是 &lt;code&gt;name：= initialvalue&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;  
    &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;naveen&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;29&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//short hand declaration
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;my name is&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;age is&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;由于 Go 是强类型的，因此声明属于一种类型的变量不能分配另一种类型的值。以下程序将抛出一个错误，&lt;code&gt;cannot use &amp;quot;naveen&amp;quot; (type string) as type int in assignment&lt;/code&gt; 因为 age 被声明为 int 类型，不能赋予其他类型的值。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;age&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Bob&amp;#34;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//error since we are trying to assign a string to a variable of type int
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      
    </item>
    
    <item>
      <title>Go 教程第二部分之 Hello World</title>
      <link>https://reallyli.github.io/post/go-tutorial-note-2/</link>
      <pubDate>Thu, 09 Aug 2018 09:46:57 +0800</pubDate>
      
      <guid>https://reallyli.github.io/post/go-tutorial-note-2/</guid>
      
        <description>

&lt;p&gt;&lt;img src=&#34;https://eva.hixiaogan.cn/thumb/blog/hello_world_golang.png&#34; alt=&#34;hello_world_golang&#34; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;个人建议使用带有go扩展名的Visual Studio Code作为IDE。它具有自动完成，代码样式和许多其他功能。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这是 Golang 教程系列的第二篇教程。请阅读 Golang 教程第1部分：简介和安装，了解 golang 是什么以及如何安装 Golang。往往学习一门新的编程语言都要从编写 Hello World 开始，那就 Let&amp;rsquo;s do it!&lt;/p&gt;

&lt;h1 id=&#34;设置-go-工作区&#34;&gt;设置 go 工作区&lt;/h1&gt;

&lt;p&gt;准备工作之一就是需要设置 go 工作区。&lt;/p&gt;

&lt;p&gt;对于 Mac 或 Linux ，go 工作区应位于 &lt;code&gt;$ HOME / go&lt;/code&gt; 中，对于 Windows， 工作区应该位于 &lt;code&gt;C：\ Users \ YourName \ go&lt;/code&gt; 中。实际开发过程中，通过设置 &lt;code&gt;GOPATH&lt;/code&gt; 环境变量，可以设置不同的工作区。 通常 go 的所有源文件应该位于工作区内名为 src 的目录中。因此我们需要在原有工作区的基础上创建子文件夹 src ，目录结构应如下所示。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;  go
    src
      hello&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;开始编写 helloworld.go 文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello World&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;那么现在的目录结构应该是如下图所示&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;  go
    src
      hello
        helloworld.go&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h1 id=&#34;运行-go&#34;&gt;运行 go&lt;/h1&gt;

&lt;p&gt;通常运行 go 有几种不同的方法&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;使用 &lt;code&gt;go run&lt;/code&gt; 命令 - &lt;code&gt;go run ~/src/hello/helloworld.go&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;使用 &lt;code&gt;go install&lt;/code&gt; 命令， &lt;code&gt;go install hello&lt;/code&gt;，然后 &lt;code&gt;workspacepath/bin/hello&lt;/code&gt; 运行编译后的程序&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;运行程序的第三个很酷的方法是使用 &lt;code&gt;go play&lt;/code&gt;。虽然这有限制，但是当我们想要运行简单的程序时，这个在线运行 go 程序的&lt;a href=&#34;https://play.golang.org/&#34;&gt;工具&lt;/a&gt;还是不错的。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;当你输入 &lt;code&gt;go install hello&lt;/code&gt; 时，go 会在工作区内搜索 hello 包（ hello 被称为包，系列教程后面将会详细介绍包）。然后它在工作区的 bin 目录中创建一个名为 hello（ windows 环境下为 hello.exe 文件）的二进制文件。运行 &lt;code&gt;go install hello&lt;/code&gt; 后，目录结构如下所示&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;  go
    bin
      hello
    src
      hello
        helloworld.go&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h1 id=&#34;hello-world-简易-go-程序代码分析&#34;&gt;hello world 简易 go 程序代码分析&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;package main - 每个 go 文件必须以 package name 语句开头。包用于提供代码分区和可重用性。这里使用的包名是 main&lt;/li&gt;
&lt;li&gt;import &amp;ldquo;fmt&amp;rdquo; - 导入 fmt 包，它将在 main 函数中用于将文本打印到标准输出&lt;/li&gt;
&lt;li&gt;func main() - 主要是一个特殊的功能。程序执行从 main 函数开始。main函数应始终位于主包中。该 { 和 } 表示主要功能的开始和结束。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;err&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;每个&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;go&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;文件必须以&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;语句开头&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;。&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;包用于提供代码分区和可重用性&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;。&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;这里使用的包名是&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;

&lt;span class=&#34;err&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;导入&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;包&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;它将在&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;函数中用于将文本打印到标准输出&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;

&lt;span class=&#34;err&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;函数体&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;err&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;包的&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Println&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;函数用于将文本写入标准输出&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;。&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello World&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      
    </item>
    
    <item>
      <title>Go 教程第一部分</title>
      <link>https://reallyli.github.io/post/go-tutorial-note-1/</link>
      <pubDate>Sun, 05 Aug 2018 11:27:27 +0800</pubDate>
      
      <guid>https://reallyli.github.io/post/go-tutorial-note-1/</guid>
      
        <description>

&lt;p&gt;&lt;img src=&#34;https://eva.hixiaogan.cn/thumb/blog/golang_note.png&#34; alt=&#34;golang&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;什么是-golang&#34;&gt;什么是 Golang&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;Go&lt;/code&gt; 也称为 &lt;code&gt;Golang&lt;/code&gt;，是一种由谷歌开源的，编译和静态类型的编程语言&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Golang&lt;/code&gt;的主要重点是使高度可用、可扩展的 Web 应用程序开发变得简单&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;golang-的优点&#34;&gt;Golang 的优点&lt;/h1&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;并发性是该语言的重要优势。因此常用在编写多线程程序。这是通过Goroutines和渠道实现的。&lt;/li&gt;
&lt;li&gt;Golang 是一种编译语言。源代码被编译为本机二进制文件。在诸如nodejs中使用的JavaScript之类的解释语言中缺少这一点。&lt;/li&gt;
&lt;li&gt;语言规范非常简单。你甚至可以用它来写你自己的编译器:)&lt;/li&gt;
&lt;li&gt;Go 编译器支持静态链接。所有 Go 代码都可以静态链接到一个大的二进制文件中，并且可以轻松地部署在云服务器中，而不用考虑其依赖性。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;

&lt;p&gt;Mac，Windows 和 Linux 三个平台都支持Golang。您可以从 &lt;a href=&#34;https://golang.org/dl/&#34;&gt;golang.org&lt;/a&gt; 下载相应平台的二进制文件&lt;/p&gt;

&lt;h2 id=&#34;mac&#34;&gt;Mac&lt;/h2&gt;

&lt;p&gt;从 &lt;code&gt;https://golang.org/dl/&lt;/code&gt; 下载 OS X 安装程序。双击即可开始安装。按照提示进行操作，在&lt;code&gt;/usr/local/go&lt;/code&gt;中安装 Golang，然后将&lt;code&gt;/usr/local/go/bin&lt;/code&gt; 添加到 PATH 环境变量中。&lt;/p&gt;

&lt;h2 id=&#34;windows&#34;&gt;Windows&lt;/h2&gt;

&lt;p&gt;从 &lt;code&gt;https://golang.org/dl/&lt;/code&gt; 下载 MSI 安装程序。双击以开始安装并按照提示进行操作。在位置 &lt;code&gt;C：\Go&lt;/code&gt;中安装  Golang，然后&lt;code&gt;C：\Go\bin&lt;/code&gt; 添加到路径环境变量中。&lt;/p&gt;

&lt;h2 id=&#34;linux&#34;&gt;Linux&lt;/h2&gt;

&lt;p&gt;从 &lt;code&gt;https://golang.org/dl/&lt;/code&gt; 下载 tar 文件并将其解压缩到 &lt;code&gt;/usr/local&lt;/code&gt;。 然后将 &lt;code&gt;/usr/local/go/bin&lt;/code&gt; 添加到 PATH 环境变量。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;原文地址：&lt;a href=&#34;https://golangbot.com/golang-tutorial-part-1-introduction-and-installation/&#34;&gt;https://golangbot.com/golang-tutorial-part-1-introduction-and-installation/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      
    </item>
    
    <item>
      <title>Php Deployer</title>
      <link>https://reallyli.github.io/post/php-deployer/</link>
      <pubDate>Wed, 18 Jul 2018 22:00:41 +0800</pubDate>
      
      <guid>https://reallyli.github.io/post/php-deployer/</guid>
      
        <description>

&lt;p&gt;&lt;img src=&#34;https://eva.hixiaogan.cn/thumb/blog/php_deloyer_side.jpg&#34; alt=&#34;php-deployer&#34; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;实际项目开发中，对于自动化部署 php 项目市面上鲜有比较不错的方案，比如瓦力，比如公司 ruby 项目组使用 &lt;a href=&#34;https://capistranorb.com/&#34;&gt;capistrano&lt;/a&gt;，经过少数实践，还是选择使用 pr,issue 比较活跃的 deployer&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;关于 &lt;code&gt;deployer&lt;/code&gt; 部署 &lt;code&gt;Laravel&lt;/code&gt; 项目最初实践方案是比较初级的，&lt;code&gt;composer global&lt;/code&gt; 安装到本地，然后编写符合自己项目的 task , 配置主机，配置共享目录，服务器配置 sudo 免密码账号等等一系列操作。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;刚开始可能遇到的问题比较低级，但是通过翻看 &lt;a href=&#34;https://github.com/deployphp/deployer/issues&#34;&gt;deployer&lt;/a&gt; 的各种 issues，逐步的把问题解决，也算是有一点小进步吧。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;关于使用 deployer 部署 php 项目，我后来在 Laravel-china 社区看到了 Overtrue 的一篇文章，总结的很好，方便以后查阅，再此我记一下&lt;a href=&#34;https://laravel-china.org/articles/13242/another-introduction-to-the-use-of-deployer&#34;&gt;链接&lt;/a&gt;，文中把整个部署过程讲的很通透，下面的评论也有一些可能会在未来遇到的问题，总体来说很赞👍👍&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;关于使用 deployer 部署 Laravel 项目，虽然此 package 已经提前预设了 laravel recipe，包括共享目录 &lt;code&gt;storage&lt;/code&gt;，共享文件 &lt;code&gt;.env&lt;/code&gt;，集成各种 &lt;code&gt;artisan&lt;/code&gt; 等等，但是我们也在试想如何更优雅与 Laravel 贴近，于是想在此基础上封装一个扩展包，起初在此扩展包我们想添加的功能是：添加部署群消息提醒，添加修订日志，自动上传新的 .env 文件等，搜索博大的 github 仓库，果不其然发现了一个 &lt;code&gt;package&lt;/code&gt; 集成 deployer，于是在此基础上我们重新整合了需求，定制自己项目的自动化部署扩展包 &lt;a href=&#34;https://github.com/reallyli/laravel-unideploy&#34;&gt;laravel-unideploy&lt;/a&gt;，目前还在不断完善中，但是大部分代码都是基于 &lt;a href=&#34;https://github.com/lorisleiva/laravel-deployer&#34;&gt;laravel-deployer&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;原来开始叨叨别人包 bug 多，一杯咖啡的时间，冷静下来，总有一些独特的思想在里面，一千的 php 程序员眼中，总有一千种代码实现，怎么去权衡代码精简和代码易读易懂是一个不朽的问题😇&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;总结一下实际项目开发中遇到的一些问题&#34;&gt;总结一下实际项目开发中遇到的一些问题&lt;/h1&gt;

&lt;h2 id=&#34;问题一&#34;&gt;问题一&lt;/h2&gt;

&lt;p&gt;acl 未安装，下面如下 shell 返回空&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;hash&lt;/span&gt; setfacl &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&amp;gt;/dev/null&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;解决方案&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo apt-get install acl&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;参考 &lt;a href=&#34;https://github.com/deployphp/deployer/issues/1118&#34;&gt;issues&lt;/a&gt;，Unable to setup correct permissions for writable dirs&lt;/p&gt;

&lt;h2 id=&#34;问题二&#34;&gt;问题二&lt;/h2&gt;

&lt;p&gt;reload php-fpm 没有权限&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo need to enter a password&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;解决方案&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo vi /etc/sudoers
your_user_name &lt;span class=&#34;nv&#34;&gt;ALL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=(&lt;/span&gt;ALL&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; NOPASSWD: ALL&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;需要特别注意的地方是 将部署账号的 sudo 配置在文件的最后一行，避免有*覆盖*的情况，可以配置完执行 &lt;code&gt;sudo cat /etc/sudoers&lt;/code&gt; 看看是否有权限&lt;/p&gt;

&lt;h2 id=&#34;问题三&#34;&gt;问题三&lt;/h2&gt;

&lt;p&gt;git deploy failed&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;Fetching origin
ERROR: Repository not found.
fatal: Could not &lt;span class=&#34;nb&#34;&gt;read&lt;/span&gt; from remote repository.&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;解决方案&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;nb&#34;&gt;eval&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;ssh-agent -s&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
ssh-add ~/.ssh/id_rsa&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;项目部署的主机配置中设置 forwardAgent 为 true，本地 ssh-add 自己的私钥，因为部署过程中需要与服务器保持会话&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;其他的配置还在逐渐实践中，期间在遇到什么问题，随时补充笔记，吾日三省吾身。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;写了这么一段小笔记，现在已经快到12点了，突然发现我电脑的键盘膜上 &lt;code&gt;command + c&lt;/code&gt;已经开始花了，这么多天过去了，往后余生，风雪是你，平淡是你，清贫是你，荣华是你。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://www.uniqueway.com&#34;&gt;无二之旅&lt;/a&gt;，定制有温度的旅行，今年的目标之一是定制自己的 &lt;code&gt;uni-package&lt;/code&gt;，实践是成长最好的方式，等待周五的好消息，因为余生有你，才有更大的动力和信心。🌙&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      
    </item>
    
  </channel>
</rss>